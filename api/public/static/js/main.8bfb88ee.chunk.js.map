{"version":3,"sources":["components/utilities/validators.js","components/elements/form/Field.js","components/elements/Header.js","components/elements/Gallery.js","components/elements/Spinner.js","components/hooks/form-hook.js","components/pages/Index.js","App.js","index.js"],"names":["VALIDATOR_MIN","val","type","VALIDATOR_MAX","inputReducer","state","action","validation","value","validators","valid","error","validator","trim","length","Number","test","isNaN","validate","isTouched","Field","props","useReducer","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","label","onChange","onBlur","min","max","className","htmlFor","subLabel","class","rows","options","map","option","i","key","fonts","style","Math","floor","random","Header","role","onClick","resetForm","name","onSubmit","formState","inputs","keyword","records","interval","repeat","aria-label","disabled","Gallery","numResults","useRef","results","useState","index","setIndex","urls","full","backgroundImage","setBackgroundImage","t","setInterval","current","clearInterval","Spinner","formReducer","formIsValid","inputId","initialFormState","Index","loading","setLoading","apiResults","setApiResults","headerClass","setHeaderClass","initialInputs","initialFormValidity","useCallback","inputData","formValidity","useForm","inputHandler","getApiResults","a","preventDefault","fetch","process","apiCall","json","getImages","App","path","exact","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bfb88ee.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\nconst VALIDATOR_TYPE_NUMBER = 'NUMBER';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({type: VALIDATOR_TYPE_MINLENGTH, val: val});\nexport const VALIDATOR_MAXLENGTH = val => ({type: VALIDATOR_TYPE_MAXLENGTH, val: val});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\nexport const VALIDATOR_NUMBER = val => ({ type: VALIDATOR_TYPE_NUMBER, val: val });\n\nexport const validate = (value, validators) => {\n  let valid = true;\n  let error = '';\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      valid = value.trim().length > 0 || value > 0;\n      error = 'This field is required.';\n      if (!valid) {\n        break;\n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      valid = valid && value.trim().length >= validator.val;\n      error = `This field must be at least ${validator.val} characters.`;\n      if (!valid) {\n        break;\n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      valid = valid && value.trim().length <= validator.val;\n      error = `This field cannot be more than ${validator.val} characters.`;\n      if (!valid) {\n        break;\n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      valid = Number(value) >= validator.val;\n      error = `This field must have a value of at least ${validator.val}.`;\n      if (!valid) {\n        break;\n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      valid = Number(value) <= validator.val;\n      error = !valid ? `This field cannot have a value more than ${validator.val}.` : '';\n      if (!valid) {\n        break;\n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      valid = valid && /^\\S+@\\S+\\.\\S+$/.test(value);\n      error = 'This field must be a valid email.'\n      if (!valid) {\n        break;\n      }\n    }\n    if (validator.type === VALIDATOR_TYPE_NUMBER) {\n      valid = valid && !isNaN(value.trim());\n      error = 'This field must be a number.'\n      if (!valid) {\n        break;\n      }\n    }\n  }\n\n  return {valid, error};\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../utilities/validators';\nimport '../../../styles/toggle.css'\n\nconst inputReducer = (state, action) => {\n  const validation = validate(action.value, action.validators);\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.value,\n        valid: validation.valid,\n        error: validation.error\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true,\n        value: action.value,\n        valid: validation.valid,\n        error: validation.error\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Field = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value,\n    isTouched: false,\n    valid: props.valid,\n    error: ''\n  });\n\n  const {id, onInput} = props;\n  const {value, valid} = inputState;\n\n  useEffect(() => {\n    onInput(id, value, valid)\n  }, [id, onInput, valid, value]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      value: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = event => {\n    dispatch({\n      type: 'TOUCH',\n      value: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.label}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        min={props.min}\n        max={props.max}\n      />\n    ) : props.element === 'toggle' ? (\n      <label className=\"toggle\" htmlFor={props.id}>\n        <input\n          id={props.id}\n          type={props.type}\n          placeholder={props.label}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n          min={props.min}\n          max={props.max}\n        />\n        <span className=\"slider round\"></span>\n        <span className=\"label\">{props.label}</span> {props.subLabel && <span>{props.subLabel}</span>}\n      </label>\n    ) : props.element === 'textarea' ? (\n      <textarea\n        id={props.id}\n        className={props.class}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <select\n        id={props.id}\n        placeholder={props.label}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={props.value}\n      >\n        <option value={null}>{props.label}</option>\n        {props.options.map((option, i) => (\n          <option key={`option.label-${i}`} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    );\n\n  return (\n    <div className={`form-field ${(!inputState.valid && inputState.isTouched) ? 'invalid' : 'valid'}`}>\n      {element}\n      {!inputState.valid && inputState.isTouched &&\n        <div className=\"error\">{inputState.error}</div>\n      }\n    </div>\n  );\n};\n\nexport default Field;\n","import React from 'react';\nimport Field from './form/Field';\nimport {VALIDATOR_MAX, VALIDATOR_MIN, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE} from '../utilities/validators';\n\nconst fonts = ['monoton', 'rock-salt', 'audiowide', 'knewave'];\nconst style = fonts[Math.floor(Math.random() * fonts.length)];\n\nconst Header = props => {\n  return (\n    <>\n      <header role=\"banner\" className={props.class}>\n        <h1 id=\"logo\" className={style}>PixMix<span>R</span></h1>\n        {\n          props.class === 'minimized' &&\n          <button className=\"reset\" onClick={props.resetForm} type=\"button\">&#9881;</button>\n        }\n        <form name=\"image-form\" onSubmit={props.onSubmit}>\n          <Field\n            element=\"input\"\n            id=\"keyword\"\n            type=\"text\"\n            label=\"Keyword\"\n            error=\"\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(3)]}\n            onInput={props.onInput}\n            value={props.formState.inputs.keyword.value}\n            valid={props.formState.inputs.keyword.valid}\n          />\n          <Field\n            element=\"input\"\n            id=\"records\"\n            type=\"number\"\n            label=\"# Pictures\"\n            error=\"\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MIN(10), VALIDATOR_MAX(100)]}\n            onInput={props.onInput}\n            value={props.formState.inputs.records.value}\n            valid={props.formState.inputs.records.valid}\n            min={10}\n            max={100}\n          />\n          <Field\n            element=\"select\"\n            id=\"interval\"\n            label=\"Transition Speed\"\n            options={[\n              {label: '10', value: 10},\n              {label: '15', value: 15},\n              {label: '20', value: 20},\n              {label: '30', value: 30},\n              {label: '45', value: 45},\n              {label: '60', value: 60},\n            ]}\n            error=\"\"\n            validators={[VALIDATOR_REQUIRE()]}\n            placeholder=\"Select Interval\"\n            onInput={props.onInput}\n            value={props.formState.inputs.interval.value}\n            valid={props.formState.inputs.interval.valid}\n          />\n          <Field\n            element=\"toggle\"\n            id=\"repeat\"\n            type=\"checkbox\"\n            class=\"toggle\"\n            label=\"Repeat\"\n            onInput={props.onInput}\n            error=\"\"\n            validators={[]}\n            value={props.formState.inputs.repeat.value}\n            valid={props.formState.inputs.repeat.valid}\n          />\n          <div className=\"form-field full\">\n            <button type=\"submit\" aria-label=\"Create Gallery\" disabled={!props.formState.valid}>\n              Create Gallery\n            </button>\n          </div>\n        </form>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useRef, useEffect } from 'react';\n\nconst Gallery = props => {\n  const numResults = useRef(props.results.length);\n  const [index, setIndex] = useState(0);\n  const [backgroundImage, setBackgroundImage] = useState(props.results[index].urls.full);\n\n  useEffect(() => {\n    if (props.interval) {\n      const t = setInterval(() => {\n        setBackgroundImage(props.results[index].urls.full);\n        numResults.current > 1 && setIndex(index + 1);\n      }, props.interval * 1000);\n\n      if (index === (numResults.current - 1)) {\n        clearInterval(t);\n      }\n\n      return () => {\n        clearInterval(t);\n      };\n    }\n  });\n\n  return (\n    <>\n      <div id=\"gallery\" style={{backgroundImage: `url(${backgroundImage})`}}></div>\n    </>\n  );\n};\n\nexport default Gallery;\n","import React from 'react';\nimport '../../styles/spinner.css';\n\nconst Spinner = props => {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.valid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].valid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, valid: action.valid }\n        },\n        valid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        valid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    valid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, valid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      valid: valid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useState, useEffect } from 'react';\nimport Header from '../elements/Header';\nimport Gallery from '../elements/Gallery';\nimport Spinner from '../elements/Spinner';\nimport { useForm } from '../hooks/form-hook';\n\nconst initialFormState = {\n  keyword: {\n    value: '',\n    valid: false,\n  },\n  records: {\n    value: '',\n    valid: false\n  },\n  interval: {\n    value: '',\n    valid: false\n  },\n  repeat: {\n    value: false,\n    valid: true\n  }\n};\n\nconst Index = props => {\n  const [loading, setLoading] = useState(true);\n  const [apiResults, setApiResults] = useState(null);\n  const [headerClass, setHeaderClass] = useState('');\n  const [formState, inputHandler] = useForm(initialFormState, false);\n  const keyword = formState.inputs.keyword.value;\n  const records = formState.inputs.records.value;\n  const interval = Number(formState.inputs.interval.value);\n  const repeat = formState.inputs.repeat.value;\n\n  const getApiResults = async event => {\n    event && event.preventDefault();\n    setLoading(true);\n    const apiCall = await fetch(`${process.env.REACT_APP_API_URL}/images?query=${keyword}&total=${records}`);\n    const results = await apiCall.json();\n    setApiResults(results);\n    setLoading(false);\n    setHeaderClass('minimized');\n  };\n\n  const resetForm = () => {\n    setHeaderClass('');\n  };\n\n  useEffect(() => {\n    async function getImages() {\n      const apiCall = await fetch(`${process.env.REACT_APP_API_URL}/images?query=kansas+city&total=1`);\n      const results = await apiCall.json();\n      setApiResults(results);\n      setLoading(false);\n    }\n    getImages();\n  }, []);\n\n  if (loading) {\n    return (\n      <Spinner />\n    );\n  }\n\n  return (\n    <>\n      <Header onSubmit={getApiResults} onInput={inputHandler} formState={formState} resetForm={resetForm} class={headerClass} />\n      {apiResults.results.length && <Gallery records={records} interval={interval} repeat={repeat} results={apiResults.results} />}\n      {!apiResults.results.length && <div className=\"message alert\">Bummer. No results were found. <span className=\"close\">X</span></div>}\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport Index from './components/pages/Index';\n\nconst App = () => {\n  return (\n    <Router>\n      <main>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Index />\n          </Route>\n          <Redirect to=\"/\"/>\n        </Switch>\n      </main>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}